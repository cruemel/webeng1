100 Continues
Der Client (bsp.: Browser) hat eine Anfrage an den Server gestellt und soll mit seiner Anfrage fortfahren. Der Browser/Client wird vom Server dahingehend informiert, dass die Anfrage / der Request ankam und nicht abgelehnt wurde. Der Client / Browser soll seine Anfrage weiter fortsetzen oder falls die Anfrage bereits abgeschlossen ist, diese Antwort (100: Continues) ignorieren. Der Server muss auf jeden Fall eine finale Antwort an den Client / Browser senden.

101 Switching Protocols
Wird verwendet, wenn der Server eine Anfrage mit gesetztem „Upgrade“-Header-Feld empfangen hat und mit dem Wechsel zu einem anderen Protokoll einverstanden ist. Anwendung findet dieser Status-Code beispielsweise im Wechsel von HTTP zu WebSocket.

102 Processing
Wird verwendet, um ein Timeout zu vermeiden, während der Server eine zeitintensive Anfrage bearbeitet

Die Anfrage war erfolgreich. Die zurückgegebenen Informationen sind abhängig von der in der Anfrage verwendeten Befehle, z.B.

GET: Die Antwort enthält den Datensatz der angeforderten Ressource
HEAD: Die Antwort enthält den Kopf des Datensatzes der angeforderten Ressource, ohne Körper.
POST: Ein Datensatz, der das Ergebnis der Aktion beschreibt oder beinhaltet
TRACE: Der Datensatz beinhaltet die Anfrage, wie sie der Endserver empfangen hat.

201 Created
Die Anfrage wurde erfolgreich bearbeitet. Die angeforderte Ressource wurde vor dem Senden der Antwort erstellt. Das „Location“-Header-Feld enthält eventuell die Adresse der erstellten Ressource.

202 Akzeptiert
Die Anfrage wurde zur Verabeitung akzeptiert, aber die Verarbeitung wurde nicht abgeschlossen. Auf die Anfrage kann oder kann nicht bei Gelegenheit reagiert werden, da sie verboten sein kann, wenn sie tatsächlich verarbeitet werden wird. Es gibt keine Möglichkeit, einen neuen Statuscode zu versenden für eine zeitversetzte Anfrage wie diese.
Die 202-Antwort ist bewußt unverbindlich gehalten. Ihr Sinn ist es, dem Server das Akzeptieren einer Anfrage für einen anderen Zweck (vielleicht eine Stapelverarbeitung, die nur einmal täglich läuft) zu erlauben, ohne die Erfordnernis, die Anfragerverbindung zum Server aufrecht zu halten bis der Prozeß abgeschlossen ist. Die Entität, welche mit dieser Antwort verschickt wird SOLLTE einen Hinweis auf den momentanen Anfragestatus beinhalten, sowie entweder einen Zeiger auf einen Statusanzeiger oder eine Schätzung, wann der Benutzer mit einer Antwort rechnen kann.

203 Non-Authoritative Information
Die vom Entity-Header zurückgegebenen Metainformationen entsprechen nicht genau denen des Ursprungs-Servers, sondern stammen von einer lokalen oder einer Drittanbieter-Kopie. Die zusammengestellten Informationen sind möglicherweise nur eine Teilmenge oder Obermenge der ursprünglichen Version. Das könnte zum Beispiel dazu führen dass die Metainformationen des Ursprungs-Servers ein Resultat der beinhaltenden Informationen über die Bezugsquelle sind.
Die Verwendung dieses Response-Codes ist nicht notwendig und findet nur Verwendung wenn dieser ansonsten 200 (OK) lauten würde.

204 no content
Die Anfrage kam beim Server an, der jedoch keine Daten zurücksendet.
Wozu das gut ist, weiß ich auch nicht. Vielleicht hab ich nicht alles verstanden.

205 Inhalt löschen.
Der Server hat die Anfrage erfüllt.
Der User Agent sollte die Dokumenten Ansicht löschen.
Die Antwort beabsichtigt hauptsächlich, das der Benutzer
Eingaben machen kann. Das Formular wird gelöscht.
Dann kann der Benutzer eine weitere Eingabe tätigen.
Der Reponse darf keine Sondezeichen enthalten, die mit &
beginnen.

206 teilweiser Inhalt
Der Server hat eine Anfrage nach nur einem Teil der Resource erledigt. Die Anfrage muss ein Bereichsfeld enthalten und kann Bedingungen enthalten (Wenn-Bereichsfeld). Es werden weiterhin erforderliche Bereichsfelder aufgefuehrt und Bedingungen genannt, die nicht auftreten sollten oder duerfen. 

300 Mehrere Möglichkeiten
Die angeforderte Ressource entspricht einem aus einem Satz von Darstellungen, jede mit Ihrer eigenen spezifischen Ort, und System bezogene Auswahl Informationen werden bereitgestellt so das der Benutzer (oder Benutzer-agebt) auswählen kann woher er die Information beziehen will und deriviert die Anfrage an den entsprechenden Ort....

301 Dauerhaft geaenderte Adresse

Der angefragten Resource wurde dauerhaft eine neue Adresse zugewiesen und jeder weitere Verweis auf diese Resource sollte als Rückgabewerte eine? der neuen Adressen beinhalten. Clients der Möglichkeit, Links zu editieren, sollten wenn möglich, diese Änderung selbsttätig durchführen. Die Antwort (des Servers) kann zwischengespeichert werden, solange nicht anders angegeben.

Die neue Adresse sollte in dem Adressefeld der Antwort stehen. Sofern es keine Anfrage von Typ HEAD war, sollte die Antwort eine kurze Notiz mit der neuen Adresse beinhalten.

Sollte dieser Status-Code die Antwort auf eine andere Anfrage, als die vom Typ GET oder HEAD, sein, so muss die Software die Anfrage nicht automatisch auf die neue Adresse umleiten, ausser es besteht fuer den Benutzer die Moeglichkeit, diese Option zu bestaetigen, da sich inzwischen die Bedingungen geaendert haben koennen, unter denen er die Anfrage gestellt hat. 

302 Gefunden

Die angefragte Resource befindet sich zeitweise an einer anderen Adresse.
Da sich das Umleitungsziel noch aendern kann, sollte der Client die ursprünglich angefragte Adresse für zukünfige Anfragen beibehalten. Die Antwort des Servers sollte nur zwischengespeichert werden, sofern durch Speicher- oder Verfallstempel im Kopf der Nachricht angezeigt.

Das temporaere Ziel sollte im Adressfeld der Antwort angegeben sein. Sofern dies keine Anfrage vom Typ HEAD ist, sollte die ganze Antwort auch eine kurze Notiz mit einem Link auf die neue Adresse enthalten.

Sollte der Status-Code 302, die Antwort auf eine andere Anfrage, als die vom Typ GET oder HEAD sein, so muss die Software die Anfrage nicht automatisch auf die neue Adresse umleiten, ausser es besteht fuer den Benutzer die Moeglichkeit, diese Option zu bestaetigen, da diese die Bedingungen aendern koennte, unter denen die Anfrage gestellt wurde. 

Notiz: RFC 1945 und RFC 2068 spezifizieren, dass es dem Client nicht erlaubt ist, die Anfragemethode bei einer Umleitung zu aendern. Trotzdem behandeln die meisten existierenden Broswer eine Statusmedldung 302, so wie eine Antwort mit der Nummer 303 und führen eine GET-Anfrage mit dem neuen Ziel im Adressfeld der Statusmeldung aus. Die Statusmeldung 303 und 307 wurden hinzugefuegt, um den Servern die Moeglichkeit zu geben ummissverstaendlich klar zu machen, welche Reaktion sie von den Clients erwarten.

304 Not Modified
Eine Internetseite soll neu geladen werden, sie befindet sich also bereits im Cache des Browsers. Stellt der Server beim Request dabei fest, dass sich die Daten seit dem angegebenen Zeitpunkt nicht geändert haben, braucht er sie nicht noch einmal zu übermitteln, sondern sendet nur den Statuscode "304" und keine Daten, was sich auch wiederum günstig auf die Bandbreite im Netz auswirkt da hierbei weniger Traffic anfällt. 

305 Use Proxy
Auf die angeforderte Resource muss über einen Proxy zugegriffen werden.
Im Feld Location wird die URI des Proxys angegeben.
Vom Empfänger wird erwartet, diese einzelne Anfrage via Proxy zu wiederholen.
Der Status-Code 305 darf nur vom ursprünglichen Server erzeugt werden.

306 Unused - der ist auch schön ;-)
Der Statuscode 306 wurde in einer vorherigen Spezifikationsversion benutzt und wird nicht länger benutzt.
Der Code ist reserviert (vermutlich für zukünftige Verwendungen).

401 Nachdem der Webserver festgestellt hat, dass für den Get-Request eine Authentifizierung benötigt teilt er diese dem Client mit dem Code 401 mit. Zusätzlich wird der Header WWW-Authenticate gesendet um die Daten zur Authentifizierung vom Client zusammeln.
Hatte der Client mit seinem Get-Request schon die Authentifizierung mitgeliefert, weist der Code 401 auf einen Fehler bei der Authentifizierung hin.
Wenn der User vesucht sich zweimal zu Authentifizieren und jedesmal einen 401 erhält, soll ihm seine eingabe zurückgegeben werden um sie auf Fehler zu überprüfen.

403 - Forbidden

Der Server möchte die angeforderten Daten nicht herausgeben. Das passiert zum Beispiel wenn der Zugriff auf die Ressource von dem IP-Adress-Bereich, aus dem die Anfrage kommt, in der Serverkonfiguration verboten wurde, die Ressource ganz und gar gesperrt wurde oder man versucht, ein Verzeichnislisting zu bekommen, dies jedoch in der Serverkonfiguration abgeschaltet wurde. Weder die Eingabe eines Passwortes noch das Wiederholen der Anfrage wird dabei etwas bewirken und sollte daher nicht wiederholt werden. Wenn der Server zur Tarnung überhaupt keine Informationen in der Öffentlichkeit preis geben soll, kann statt dessen auch der Status Code 404 (NOT FOUND) als Antwort in den Server-Einstellung konfiguriert werden.


404 Not Found
Die angeforderte Ressource wurde nicht gefunden. Dieser Statuscode kann ebenfalls verwendet werden, um eine Anfrage ohne näheren Grund abzuweisen. Links, welche auf solche Fehlerseiten verweisen, werden auch als Tote Links bezeichnet.

